name: NanoPi-R1S H5 passwall Build 

on:
  push:
    paths:
      - '.github/workflows/passwall.yml'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -y update
          sudo apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          
      - name: Merge UpStearm OpenWrt
        run: |
          cd friendlywrt-h5
          rm -f .repo/manifests/h5.xml
          cp ../h5-19.07.xml .repo/manifests/h5.xml
          repo sync -c  --no-clone-bundle
          cp ../passwall.seed configs/config_h5
          
      - name: Update Target.mk
        run: |
          cd friendlywrt-h5/
          sed -i 's/dnsmasq /dnsmasq-full /' friendlywrt/include/target.mk
                    
      - name: Update Feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds clean -a
                    
      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-h5
          ./build.sh nanopi_r1s.mk
      
      - name: Zip Files
        run: |
          gzip friendlywrt-h5/out/*.img
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv friendlywrt-h5/out/*img* ./artifact/
          cp friendlywrt-h5/friendlywrt/.config ./artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S
          path: ./artifact/
